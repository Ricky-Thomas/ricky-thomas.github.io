<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ricky Thomas</title>
    <description>A Professional Blog and Website</description>
    <link>http://ricky-thomas.github.io/</link>
    <atom:link href="http://ricky-thomas.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 18 Mar 2015 15:28:41 -0400</pubDate>
    <lastBuildDate>Wed, 18 Mar 2015 15:28:41 -0400</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>All the Right Questions</title>
        <description>&lt;p&gt;&lt;span style=&quot;font-size:3em&quot;&gt;A&lt;/span&gt;s phase 0 of DevBootcamp comes to a close, I&#39;m asked for my last cultural blog to write about how to ask good questions. Well this is an area that I find to be particularly important and have put much work into over the years.&lt;/p&gt;
&lt;p&gt;I&#39;ve always been frustrated by people in classroom environments who ask question after question until they&#39;ve finally reached the actual problem they&#39;re having. I think it&#39;s an extremely useful skill to be able to dictate questions efficiently and accurately. Going into a new class environment, I&#39;ve been taking extra care to be sure all of my questions are clear and explain exactly what my issue is. Let&#39;s take a look at a bad question that I&#39;ve pulled from stackoverflow:&lt;/p&gt;

&lt;h4&gt;sending a filee using send_file method&lt;/h4&gt;
&lt;p&gt;send_file method doesn’t work with me in heroku however it works very will local that is the syntax that I used&lt;br /&gt;
&lt;code style=&quot;font-size:14px&quot;&gt;send_file &quot;#{Rails.root}/tmp/uploads/book/cover/#{params[:cover_path]}.#{params[:format]}&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The question above makes a few grave mistakes that could have been avoided. Most obviously, the title of the question and the question itself are poorly written using improper punctuation and grammar. If you want the fine folk online to take your coding questions seriously, the first step is to put in a little effort when you write them. If your question looks professional and serious, there&#39;s a better chance you&#39;ll get an answer that reflects those qualities.&lt;/p&gt;
&lt;p&gt;Also notice that the asker does not really address the issue in the question title. When your asking a question, a good idea would be to write out all the problems you are experiencing first. Write your detailed question, and then finally give it a title that best summarizes what the actual issue is. Let&#39;s offer our asker an alternative way to ask his question.&lt;/p&gt;
&lt;h4&gt;Rails &#39;send_file&#39; method works locally, not with Heroku.&lt;/h4&gt;
&lt;p&gt;I’m having an issue in heroku with getting the ‘send_file’ method to work.&lt;br /&gt; Everything seems fine locally, but it isn’t working online using the following syntax:&lt;br /&gt;
&lt;code style=&quot;font-size:14px&quot;&gt;send_file &quot;#{Rails.root}/tmp/uploads/book/cover/#{params[:cover_path]}.#{params[:format]}&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Asking the question this way gives you a much better chance of recieving a serious answer. I would also recommend explaining more about what happens when he tries to run the code. Maybe include an error message he recieves. Give the answerers every possible bit of knowledge that they may need in order to solve the problem.&lt;/p&gt;
&lt;p&gt;I&#39;m going to continue working on asking clear and concise questions throughout the next 10 weeks at DevBootcamp. I&#39;m so excited to start working and get the ball rooling! Hopefully I&#39;ll be able to get answers to all of my questions and get started down this exciting career path! As always, thank you for reading!&lt;br /&gt;- Ricky&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Nov 2014 07:00:00 -0500</pubDate>
        <link>http://ricky-thomas.github.io/2014/11/16/all-the-right-questions/</link>
        <guid isPermaLink="true">http://ricky-thomas.github.io/2014/11/16/all-the-right-questions/</guid>
        
        
      </item>
    
      <item>
        <title>Nothing But Internet</title>
        <description>&lt;p&gt;&lt;span style=&quot;font-size:3em&quot;&gt;I&lt;/span&gt;n the modern world, it&#39;s tough to go anywhere that isn&#39;t connected to the internet in some way or another. A network of devices creating networks all connected to a bigger network forming a massive web encompassing the globe. This is one of the most commonly used tools in our day to day lives, but do you know how it works? In this blog I will do my best to inform those of you who have no idea how your emails keep showing up each day. So if you&#39;re an internet whiz and know everything there is to know on the topic...this post might not be for you. Novices! Read on!&lt;/p&gt;

&lt;h3&gt;How do you connect?&lt;/h3&gt;
&lt;p&gt;We all have different ways that we connect to and use the internet. On any given day I could use anywhere from one to nine internet connected devices, and those are just the ones that I own. For the sake of this example though, let&#39;s just say you&#39;ve got a smartphone, and you use facebook. You have friends on facebook that are seeing the same content as you are, and you are able to connect with those friends. Say you send a message to your best pal, Kevin. Now you&#39;re devices have a connection, a network if you will. But other friends want to chat too! Now that first network joins your other friends network and they become an &lt;strong&gt;inter-net&lt;/strong&gt;work.&lt;/p&gt;
&lt;p&gt;In order for these networks to join and mix together, they first need to agree to a set of rules to follow. This set of rules is known as the &lt;strong&gt;internet protocol&lt;/strong&gt;. Now as long as a device can follow this protocol, then they can join the network of connected networks which we call the internet.&lt;/p&gt;

&lt;h3&gt;What&#39;s yo address?&lt;/h3&gt;

&lt;p&gt;Every internet connected device you own has it&#39;s own unique IP (internet protocol) address. When you send a message to another computer, your computer breaks down your message into tiny packets of data which then flows, broken up, through the web of networks until each packet reaches the destination IP address. Upon reaching the destination the recieving device knows (as per internet protocol) how to reassemble the data. One of the internets greatest strengths is that your packets of data will most likely find a way to their destination eventually regardless of route they take. There are so many paths for data to flow that breaking things up and scattering them down various paths all to reconverge at the destination can be much quicker than trying to force a big chunk of data down a small data stream. &lt;/p&gt;

&lt;p&gt;I hope that this has helped you in understanding the basics of how the internet works. If you want to know more on the topic…ask the internet. There are literally millions of resources at your fingertips at any given second! Thanks for reading!&lt;br /&gt;
- Ricky&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Nov 2014 07:00:00 -0500</pubDate>
        <link>http://ricky-thomas.github.io/2014/11/12/nothing-but-internet/</link>
        <guid isPermaLink="true">http://ricky-thomas.github.io/2014/11/12/nothing-but-internet/</guid>
        
        
      </item>
    
      <item>
        <title>Learning from Conflict</title>
        <description>&lt;p&gt;&lt;span style=&quot;font-size:3em&quot;&gt;I&lt;/span&gt;f you were to ask friends of mine who was least likely to be involved in a fight, they would probably say me. It&#39;s not that there aren&#39;t days where I just want to scream, because everyone has those. But I&#39;ve always believed that most conflicts come out of some kind of miscommunication. It seems that every time I&#39;ve seen any kind of altercation, there has been some sort of mix up and it could probably be worked out with words. Honestly, resorting to violence in any situation is unacceptable. Most conflicts can be solved with clear, friendly communication.&lt;/p&gt;
&lt;p&gt;In my work experience there has only been a few times I can think of where there was really any kind of conflict. Most times it&#39;s a misunderstanding and can be cleared up quickly. One time in particular things were dragged out for a few days. I won&#39;t bore you with the details but just know that I misunderstood directions I had been given, communication was not clear from myself or the other party, we blamed each other. Neither of us were happy with each other but we needed to work it out so I visited my coworkers office. That day I learned a really valuable lesson. In the situation, what happened honestly could have been either parties fault. I would even say that both were equally at fault. I walked in there and I took the blame. I said my piece, apologized for any miscommuncation, made a few jokes, and smiled. We&#39;ve worked together a few more times since then. See, sometimes it isn&#39;t about who did what. Sometimes you just need to take responsibility and get back to work. Being one of the first to jump in and take responsibility can earn you respect in the workplace and in life in general.&lt;/p&gt;
&lt;p&gt;If I could go back and have a do-over with that conflict, I would communicate my issues much more clearly. The issue lasted a few days because we didn&#39;t want to talk to each other. I would have tried my best to make things right as quickly as possible.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
We can learn a lesson from just about every interaction we share with others. A workplace is a very important environment in our day to day lives and having the ability to clearly communicate and take responsibility is key to a happy work life. Thanks for reading!&lt;br /&gt; - Ricky&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Nov 2014 07:00:00 -0500</pubDate>
        <link>http://ricky-thomas.github.io/2014/11/12/learning-from-conflict/</link>
        <guid isPermaLink="true">http://ricky-thomas.github.io/2014/11/12/learning-from-conflict/</guid>
        
        
      </item>
    
      <item>
        <title>Let&#39;s get Classy</title>
        <description>&lt;p&gt;&lt;span style=&quot;font-size:3em&quot;&gt;T&lt;/span&gt;hus far throughout DevBootcamp my main focus has been on the Ruby programming language. However, this last week I spent a good amount of time with Javascript and began to get a bit of a feel for it. During my studies many things about Javascript seemed to fit right in with the concepts I had already learned in Ruby, but there are definitely many differences. So far many of the differences seem to be syntactic though I&#39;m sure as I continue my studies I will find more and more deviations. In this blog I&#39;m going to look at the differences between Ruby classes and Javascript constructor functions.&lt;/p&gt;
&lt;h3&gt;Ruby Classes&lt;/h3&gt;
&lt;p&gt;In my previous blog &lt;a href=&quot;/blog/t5-ruby-classes.html&quot;&gt;&lt;em&gt;Booo Chores 10.18.14&lt;/em&gt;&lt;/a&gt;. I discuss in depth how to create classes in Ruby. But for those of you who are just joining us, let&#39;s have a bit of review!&lt;/p&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#B06;font-weight:bold&quot;&gt;Blog&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;  attr_reader &lt;span style=&quot;color:#A60&quot;&gt;:about&lt;/span&gt;, &lt;span style=&quot;color:#A60&quot;&gt;:author&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;initialize&lt;/span&gt;(about)
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;      &lt;span style=&quot;color:#33B&quot;&gt;@about&lt;/span&gt; = about
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;      &lt;span style=&quot;color:#33B&quot;&gt;@author&lt;/span&gt; = &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Ricky&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;  new_blog = &lt;span style=&quot;color:#036;font-weight:bold&quot;&gt;Blog&lt;/span&gt;.new(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Ruby&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;)
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;  new_blog.about
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;  ==&amp;gt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Ruby&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt;  new_blog.author
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;&lt;/span&gt;  ==&amp;gt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Ricky&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;In the example above, I&#39;ve created a new &lt;em&gt;Blog&lt;/em&gt; class. I&#39;ve also given this class an instance variable called &lt;em&gt;@about&lt;/em&gt; which when we create a new instance of the Blog class called &lt;em&gt;new_blog&lt;/em&gt;, we can then call the new &lt;em&gt;about&lt;/em&gt; method in order to display the value of &lt;em&gt;@about&lt;/em&gt;; in this case &quot;Ruby.&quot; Now let&#39;s add a class method.&lt;/p&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#B06;font-weight:bold&quot;&gt;Blog&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;  attr_reader &lt;span style=&quot;color:#A60&quot;&gt;:about&lt;/span&gt;, &lt;span style=&quot;color:#A60&quot;&gt;:author&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;initialize&lt;/span&gt;(about)
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;      &lt;span style=&quot;color:#33B&quot;&gt;@about&lt;/span&gt; = about
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;      &lt;span style=&quot;color:#33B&quot;&gt;@author&lt;/span&gt; = &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Ricky&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;is_about&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;      puts &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;This blog is about &lt;/span&gt;&lt;span style=&quot;background-color:hsla(0,0%,0%,0.07);color:black&quot;&gt;&lt;span style=&quot;font-weight:bold;color:#666&quot;&gt;#{&lt;/span&gt;&lt;span style=&quot;color:#069&quot;&gt;self&lt;/span&gt;.about&lt;span style=&quot;font-weight:bold;color:#666&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt;  another_new_blog = &lt;span style=&quot;color:#036;font-weight:bold&quot;&gt;Blog&lt;/span&gt;.new(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;cats&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;)
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;&lt;/span&gt;  another_new_blog.is_about
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n15&quot; name=&quot;n15&quot;&gt;15&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#777&quot;&gt;#prints &amp;quot;This blog is about cats.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n16&quot; name=&quot;n16&quot;&gt;16&lt;/a&gt;&lt;/span&gt;  another_new_blog.author
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n17&quot; name=&quot;n17&quot;&gt;17&lt;/a&gt;&lt;/span&gt;  ==&amp;gt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Ricky&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Notice that even though we&#39;ve initiated a new Blog class object (about cats this time) I&#39;m still the author! This class could continue to be built upon until it was a great way to create new blog objects and give them each in turn their own qualities. Let&#39;s now look at some Javascript.&lt;/p&gt;
&lt;h3&gt;Javascript Constructor Functions&lt;/h3&gt;
&lt;p&gt;Javascript is a classless language but there are still ways to create multiple objects that all share the same properties. First let&#39;s look at how to create a basic object in Javascript using what&#39;s called &lt;em&gt;literal notation&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;var&lt;/span&gt; blogObject = {
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#606&quot;&gt;about&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Javascript&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;,
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#606&quot;&gt;author&lt;/span&gt;: &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Ricky&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;  }
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;  blogObject.about
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;  ==&amp;gt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Javascript&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;This is pretty simple so far. We have a new variable (var blogObject) and we&#39;re setting it to have the value of an object we&#39;ve created with a couple of properties; &lt;em&gt;about&lt;/em&gt;, and &lt;em&gt;author&lt;/em&gt;. That&#39;s all well and good but I want to be able to create new blogs that are about different things! Observe the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;blogObject&lt;/span&gt;(about) {
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#950&quot;&gt;this&lt;/span&gt;.about = about;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#950&quot;&gt;this&lt;/span&gt;.author = &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Ricky&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;  }
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;  dog_blog = &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;new&lt;/span&gt; blogObject(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Dogs&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;  dog_blog.author
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;  ==&amp;gt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Ricky&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;  dog_blog.about
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;  ==&amp;gt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Dogs&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;In the code above, &lt;em&gt;this&lt;/em&gt; works in the same way that &lt;em&gt;self&lt;/em&gt; works in Ruby. We now have a function that can be used to create blog objects! Notice the differences in syntax. When we invoke functions using &lt;em&gt;new&lt;/em&gt; they are then &lt;em&gt;constructor functions&lt;/em&gt;. Using &lt;em&gt;new&lt;/em&gt; creates a new object and also indicates that &lt;em&gt;this&lt;/em&gt; should refer to that new object as opposed to one global object. But how can we make it so that each new object created is able to perform an object specific function? In the Ruby code earlier we made the method &lt;em&gt;is_about&lt;/em&gt; so that any Blog class object could use it. Now let&#39;s look at a way to do this in Javascript:&lt;/p&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;blogObject&lt;/span&gt;(about) {
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#950&quot;&gt;this&lt;/span&gt;.about = about;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#950&quot;&gt;this&lt;/span&gt;.author = &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Ricky&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;  }
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;  blogObject.prototype.&lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;isAbout&lt;/span&gt; = &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;function&lt;/span&gt;() {
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;This blog is about &lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; + &lt;span style=&quot;color:#950&quot;&gt;this&lt;/span&gt;.about + &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;  }
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;var&lt;/span&gt; newBlog = &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;new&lt;/span&gt; blogObject(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;fish&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;  newBlog.isAbout();
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;&lt;/span&gt;  ==&amp;gt; &lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;This blog is about fish.&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Now anytime a new blogObject is created in this program the &lt;em&gt;isAbout&lt;/em&gt; function will be available to it for use. This is called &lt;em&gt;prototypal inheritance&lt;/em&gt;. In the second bit of code where we establish a &lt;em&gt;blogObject.prototype&lt;/em&gt; we are just basically accessing that object and writing a function into that objects prototype. We can view an objects prototype by calling the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;  Object.getPrototypeOf(newBlog);
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;  ==&amp;gt; { &lt;span style=&quot;color:#606&quot;&gt;isAbout&lt;/span&gt;: [Function] }
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;You can see that these two coding languages are very different in some ways. Especially syntactically, but also in that Javascript is not able to make &quot;classes.&quot; Of course it does have it&#39;s own way of achieving similiar results. I hope this blog has helped you in your learning!&lt;br /&gt;
  Thanks for reading!&lt;br /&gt;- Ricky&lt;/p&gt;
</description>
        <pubDate>Sat, 01 Nov 2014 08:00:00 -0400</pubDate>
        <link>http://ricky-thomas.github.io/2014/11/01/lets-get-classy/</link>
        <guid isPermaLink="true">http://ricky-thomas.github.io/2014/11/01/lets-get-classy/</guid>
        
        
      </item>
    
      <item>
        <title>A Very Real Threat</title>
        <description>&lt;p&gt;&lt;span style=&quot;font-size:3em&quot;&gt;T&lt;/span&gt;he United States of America contains people from everywhere in the world. People of different sizes, color, and hundreds of other unique qualities. With all these different types of people sharing the same land, stereotyping becomes an inevitability. Unfortunately, people are mean. Some stereotypes are harmless, like saying all teenage boys love video games. Do they really? Probably not but it doesn&#39;t matter. The negative stereotypes are the ones that matter and from them we are under constant threat.&lt;/p&gt;
&lt;h3&gt;Stereotype Threat&lt;/h3&gt;
&lt;p&gt;This is a concept that is mainly discussed in regards to education or the workplace where an individual feels that they are part of a stereotype and because of that end up performing at a limited capacity. For example, when I was in college, I was very out of shape. I was in the Theatre program and I was always auditioning for the school shows. I remember a few instances where I wanted to audition but the part that I really wanted was traditionally played by someone not so overweight. When I got up on that stage, because I felt like I might not even be considered, I would mess it up. I would leave those auditions feeling like I could have done way better. It may have been a simple mistake sure, but the idea of sterotype threat is that I may have subconciously made myself perform at a lower level. I was feeling self-concious and hopeless, so yeah I would say that the threat is real.&lt;/p&gt;
&lt;p&gt;The articles I read when researching for this blog post offered up plenty more stereotypes and how they are under threat but I&#39;m not going to go into all that here. It&#39;s clear as day to me that when we arrive at DevBootcamp it will be a very diverse group of people. Personally, I&#39;m thrilled. You see, growing up in a small town in Western New York I was never surrounded by much diversity. But after living in NYC for a few years I&#39;ve met and worked with people from around the globe. Each experience I&#39;ve had with someone from another culture or ethnic group has opened my eyes. There are so many types of people and everyone has just as much right to be here as I do. No more, no less.&lt;/p&gt;
&lt;p&gt;During my time at DevBootcamp I hope that everyone feels comfortable and that noone falls under stereotype threat. If it does occur, I honestly wouldn&#39;t mind sitting down for coffee or drinks with any other member of our group and talking about it. Everyone should have the same opportunity to make it through this program! If you&#39;re feeling like you are being left behind because of a stereotype, tell someone. I know if it were happening to me I would definitely talk to the staff and/or my cohort.&lt;/p&gt;
&lt;p&gt;I did eventually get one of those parts typically played by someone thinner and I played that role just as good as anyone else could&#39;ve. I still remember the feeling though. Hopeless. There was just no way. Well, I&#39;m a firm believer that no matter who you are or where you come from, if you work hard for something long enough and don&#39;t let foolish opinions bring you down, anything is possible. I&#39;ve lost over 100 pounds since college. But many, many, many times while I was losing that weight I wanted to stop. I wanted to grab the nearest box of GirlScout cookies and hide behind my computer. I was always talking to my friends and family about it though. They kept me going. It didn&#39;t matter that I was a &#39;fat guy,&#39; because it was possible to change. That change can only be made possible after you&#39;ve changed inside of yourself. Once you accept that it can be done, you can make it into reality. So please fellow boots, if at anytime you&#39;re feeling under stereotype threat let&#39;s hang out and talk about it. Because the people who have been there through the hard times and kept me positive are the ones that I&#39;ll never be able to thank enough.&lt;br /&gt;
  Can&#39;t wait to start this thing in person!&lt;br /&gt;
  - Ricky&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Oct 2014 08:00:00 -0400</pubDate>
        <link>http://ricky-thomas.github.io/2014/10/27/very-real-threat/</link>
        <guid isPermaLink="true">http://ricky-thomas.github.io/2014/10/27/very-real-threat/</guid>
        
        
      </item>
    
      <item>
        <title>OOP and Functional Programming</title>
        <description>&lt;p&gt;&lt;span style=&quot;font-size:3em&quot;&gt;A&lt;/span&gt;s I delve deeper into the realm of the computer sciences throughout my DevBootcamp training, every so often new concepts come up that I&#39;m required to familiarize myself with. The concept today was the programming paradigm, functional programming. Now the first thing I did when I read that was look up just what the heck a paradigm is... A paradigm is defined as a typical example or pattern of something; a model. Okay so then functional programming is just another style of organizing code. But wait, up to this point most of my learning has been encapsulated in object oriented design! You&#39;re tellin me there are not just one but a whole bunch of other programming paradigms?! Needless to say I was a bit taken aback. After a break from the computer and some hot apple cider, I dove back into seeing for myself just what the differences between these two paradigms are.&lt;/p&gt;
&lt;h3&gt;Object Oriented Programming in a Nutshell&lt;/h3&gt;
&lt;p&gt;When you write code in an Object Oriented coding language, everything takes on the role of an object. Objects in the programming world, just as in the real world, have attributes that make them unique. In programming, objects can be mostly anything. For example, lets say that we&#39;ve created one of these objects in the Ruby coding language, and this particular object is a Walnut. That&#39;s right...a walnut.&lt;/p&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#B06;font-weight:bold&quot;&gt;Walnut&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;  attr_reader &lt;span style=&quot;color:#A60&quot;&gt;:shell&lt;/span&gt;, &lt;span style=&quot;color:#A60&quot;&gt;:nut&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;initialize&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;      &lt;span style=&quot;color:#33B&quot;&gt;@shell&lt;/span&gt; = &lt;span style=&quot;color:#069&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;      &lt;span style=&quot;color:#33B&quot;&gt;@nut&lt;/span&gt; = &lt;span style=&quot;color:#069&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Above we have a new ruby class establishing a Walnut object that has the attributes of shell and nut. Now, we COULD write a whole bunch of fun methods in here but a nut doesn&#39;t too much in the real world beside have a shell and a nut. But what the heck we can figure out something.&lt;/p&gt;

&lt;div class=&quot;highlighter-coderay&quot;&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#B06;font-weight:bold&quot;&gt;Walnut&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;  attr_reader &lt;span style=&quot;color:#A60&quot;&gt;:shell&lt;/span&gt;, &lt;span style=&quot;color:#A60&quot;&gt;:nut&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;initialize&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;      &lt;span style=&quot;color:#33B&quot;&gt;@shell&lt;/span&gt; = &lt;span style=&quot;color:#069&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;      &lt;span style=&quot;color:#33B&quot;&gt;@nut&lt;/span&gt; = &lt;span style=&quot;color:#069&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;squirrel&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;      &lt;span style=&quot;color:#33B&quot;&gt;@shell&lt;/span&gt; = &lt;span style=&quot;color:#069&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;&lt;/span&gt;  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Now our Walnut object class has a new ability (method) called squirrel. Just as a squirrel might shell a walnut, our squirrel method changes the state of our @shell variable to false. If we were to create a new walnut and then tell it to use it&#39;s squirrel method, it would take away it&#39;s shell. I realize that nut&#39;s can&#39;t squirrel themselves but hey you get the idea. If we were to really get into it, we could create a squirrel object that could deshell a nut object and perform a myriad of other squirrely tasks but I&#39;m a bit short on time lately.&lt;/p&gt;
&lt;h3&gt;Functional Programming in a... okay just functional programming&lt;/h3&gt;
&lt;p&gt;Functional programming is another way to develop programs using coding languages and this style does it all using what are known as functions. Basically, this style of programming computes information relying solely on mathematical equations. Remember how in our examples of OOP above we were setting different objects to hold information. Like how the @nut variable (which also counts as an object) holds a value of true. Well this value is what&#39;s known as the object&#39;s state. Functional programming doesn&#39;t deal with state. Variables don&#39;t retain state after specific functions and they are also immutable (meaning they can&#39;t be changed after creation). Some people see this as beneficial and others disagree. What we know for sure is that this way of doing things does eliminate occasions where variables might be changed as a side effect of calling some code. For some this is more clear cut and preferable. You can write functions that execute their specified code and use them as arguments for other functions to then execute their output. In this manner, functions upon functions upon functions can be built into giant programs.&lt;/p&gt;
&lt;h3&gt;So what&#39;s the difference?&lt;/h3&gt;
&lt;p&gt;Well, it&#39;s a tough question to answer and one that would be impossible for me to do so in such a small amount of time. There are many differences and many similiarities. The main take-away that I&#39;ve had so far in my research is this. When you are developing in an Object Oriented Programming language, you will usually have a set of &quot;operations&quot; that affect &quot;things.&quot; As new operations are needed, new &quot;things&quot; (objects in this case) are added to the code. In a Functional Programming language you normally work with a set of exisiting &quot;things&quot; and add more operations as you develop the code.&lt;br /&gt;
  I hope this basic intro helps you in your learning!&lt;br /&gt;Best,&lt;br /&gt;- Ricky&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Oct 2014 08:00:00 -0400</pubDate>
        <link>http://ricky-thomas.github.io/2014/10/27/oop-concepts/</link>
        <guid isPermaLink="true">http://ricky-thomas.github.io/2014/10/27/oop-concepts/</guid>
        
        
      </item>
    
      <item>
        <title>Feedin Back</title>
        <description>&lt;p&gt;At the outset of DevBootcamp, there&#39;s a ton of talk about being a team player and being able to provide feedback that is actionable, specific, and kind. This is an extremely important skill to have in any business. So, over the past 5 weeks throughout the first half of phase 0, we&#39;ve been pairing up a few times a week with other DevBootcamp boots. After we complete a coding challenge together, we are asked to give anonymous feedback which is then rated (by other boots) and sent if it&#39;s actionable, specific and kind. At first I considered this to be kind of annoying. I didn&#39;t mind writing up a short bit of feedback for my partners, but rating other peoples feedback? I felt maybe that was best left to the teachers. But at DevBootcamp, everyone&#39;s a teacher.&lt;/p&gt;
&lt;h3 class=&quot;section-heading&quot;&gt;Pairing is Caring&lt;/h3&gt;
&lt;p&gt;In today&#39;s world, the technology that we have at our fingertips blows my mind at every turn. The idea that I&#39;m able to work on a challenge for class sitting in my living room with someone else sitting in their&#39;s on the other side of the country (and sometimes the world) is great! It&#39;s been a pretty cool experience for me so far getting really familiar with these technologies, but what&#39;s been even more cool has been getting familiar with some of the other boots.&lt;/p&gt;
&lt;p&gt;DevBootcamp is such a new type of educational experience for me that I&#39;ve been thrilled every chance I&#39;ve had to talk to someone else who&#39;s embarking on the same endeavor. Each time I&#39;ve met someone we usually spend a solid ten minutes getting to know one another before we dive in. I&#39;ve found this to be a great part of the process. It&#39;s really great to have access to a group of peers going through the same crazy learning experience. Every person has a different story and all of them are super interesting!&lt;/p&gt;
&lt;p&gt;Once we get into the challenges things usually go pretty smoothly. Only once or twice have a pair and I come to a point where I&#39;ve felt really frustrated. It&#39;s never with my pairing partner, but with the challenge itself and occasionally with my computer and the sometimes shoddy internet. However, it&#39;s been great that each time frustration arises my partners and I have been able to overcome! We&#39;ve been able to stay calm, keep on task, and solve the problem. And maaaaan does that feel good! There have been one or two challenges where after spending three hours trying to puzzle through it, a breakthrough is made and I actually cheer. Like full on cheer. That my friends, is the sign for me that this is something I can have passion about. Pairing has been a means of validation for me in seeing that joining this program was the right call.&lt;/p&gt;
&lt;h3 class=&quot;section-heading&quot;&gt;Feedback&#39;s a %#@&amp;amp;$&lt;/h3&gt;
&lt;p&gt;You know that whole paybacks a &quot;you know what line?&quot; Well feedback isn&#39;t anything like that. I just like to say it. Feedback has been a pleasant surprise for me so far. I didn&#39;t expect to be getting any negative feedback really but I definitely wasn&#39;t expecting how above and beyond my peers have gone in writing feedback. Each piece that I&#39;ve recieved has been very well spoken and very nice. Peers do their best to include actionable feedback along with the (much easier to write) specific and kind feedback. However, oftentimes it&#39;s pretty tough to do! I have to imagine that as we go through the program getting better and better with the material, we&#39;ll also get better and better with actionable feedback. I find it difficult to write someone else who&#39;s on the same page as me in their learning feedback on what they can do better when I myself am not in any way an expert. I still have tried my best to include actionable feedback pertaining to my partners work style or demeaner, but I want to be able to help more! I&#39;m excited for the days when I&#39;m knowledgable enough with this stuff to really help my peers.&lt;/p&gt;
&lt;p&gt;In the feedback I&#39;ve been recieving, the most oft mentioned issue is that I should speak up about my own ideas more often and also be sure we&#39;re switching roles when driving and navigating. I&#39;ve really been trying to get better at this because I know it&#39;s going to be a big part of the program. I&#39;m also really excited to start pairing in person because I believe that will make the process much easier for me. For now the plan is to continue on course and get better each and every pairing.&lt;br /&gt;Thanks for reading!&lt;br /&gt;- Ricky&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Oct 2014 08:00:00 -0400</pubDate>
        <link>http://ricky-thomas.github.io/2014/10/19/feedin-back/</link>
        <guid isPermaLink="true">http://ricky-thomas.github.io/2014/10/19/feedin-back/</guid>
        
        
      </item>
    
      <item>
        <title>New Friend Request from...Grandma?</title>
        <description>&lt;p&gt;In the time since I left for college until present day, I&#39;m completely unable to recall one trip home where I wasn&#39;t summoned down to my grandparents house to fix all the &quot;terrible&quot; things that had gone wrong with the damn picture-box. However, since that fateful day that I ventured off to college, the damn picture-box just keeps getting more and more complicated. But does it really? I&#39;m not so sure. My grandparents on the other hand (and most older adults I know) consider modern technology to be something best left untouched because they don&#39;t understand it. Most often, they REALLY want to understand it but are soon disheartened by their own &quot;tech illiteracy.&quot; For example, my dear grandmother called me down to visit her on one occasion because she had somehow managed to change the language settings on her computer to Arabic and was absolutely convinced the computer was doing this intentionally. I assured her that this wasn&#39;t the case as I changed the language back to english. In this Blog post I&#39;ll be discussing a slightly less talked about issue, making technology more accessible to our elders.&lt;/p&gt;
&lt;p&gt;Internet use has been rising in a big way in the last few years among senior citizens according to a recent study at &lt;a href=&quot;http://www.pewinternet.org/2014/04/03/older-adults-and-technology-use/&quot;&gt;The Pew Research Center&lt;/a&gt;. These day&#39;s it&#39;s calculated that 59% of Americans over 65 years of age are internet users. That&#39;s 6 in 10 grandparents! If they&#39;re anything like my grandparents they spend a lot of time at home wishing they could still be out and about causing a ruckus. Unfortunately, our bodies get too tired for some of life&#39;s day to day adventures at a certain point and we&#39;re left to twiddle our thumbs. Or at least we were.&lt;/p&gt;

&lt;div id=&quot;pic-1&quot; style=&quot;width: 450px&quot;&gt;&lt;img src=&quot;http://www.brookings.edu/~/media/Blogs/techtank/2014/04/Why%20Do%20Senior%20Citizens%20Use%20the%20Internet/Senior%20Broadband%20Figure%201.JPG&quot; /&gt;&lt;/div&gt;

&lt;p&gt;The table above shows us some of the few reasons seniors may go on the internet. These are all perfectly reasonable. Each area of information has life changing potential once we have access to it. But seniors get confused by all the &quot;junk on the screen&quot; or the &quot;computer having a mind of it&#39;s own.&quot;&lt;/p&gt;

&lt;p&gt;So what are some ways that we could help our previous generations out as they&#39;ve helped us by laying the groundwork for our society? Why not start with a senior citizen friendly internet? What if there was a browser (just like Chrome or Firefox) that was specifically geared towards senior citizens and they&#39;re understanding of the web. I&#39;m talking big buttons to reduce squinting and lot&#39;s of explanations of how to navigate. There could be a limit on how many windows are open at one time to avoid confusion. The browser could include Senior citizen versions of popular sites like Facebook and Youtube. It would be all the fun and excitement of having the world wide web at your fingertips without all the pesky small fonts, and the all confounding scroll bar.&lt;/p&gt;
&lt;p&gt;Our old folks are no less than the reason we all exist today and they deserve the opportunity to keep up with the world around them. Even if that means giving the computer a chance to redeem after its latest offenses. We can see that senior citizens are ready and wanting to join the digital age. There&#39;s got to be a way to make the transition a seamless one.&lt;br /&gt;Thanks for reading,&lt;br /&gt;- Ricky&lt;/p&gt;
</description>
        <pubDate>Sat, 11 Oct 2014 08:00:00 -0400</pubDate>
        <link>http://ricky-thomas.github.io/2014/10/11/new-friend-request/</link>
        <guid isPermaLink="true">http://ricky-thomas.github.io/2014/10/11/new-friend-request/</guid>
        
        
      </item>
    
      <item>
        <title>Recognizing Value</title>
        <description>&lt;p&gt;&lt;span style=&quot;font-size:3em&quot;&gt;F&lt;/span&gt;or today&#39;s blog I&#39;ve been asked to look over a list of values and choose the ones that come to mind when recalling times where I&#39;ve felt the happiest, proudest, and most satisfied. Now, there were A LOT of values listed. I chose a top seven and in celebration of Javascript week here they are in Javascript object:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;var myValues = {&lt;br /&gt;
  one: &#39;creativity&#39;,&lt;br /&gt;
              two: &#39;nature&#39;,&lt;br /&gt;
              three: &#39;growth&#39;,&lt;br /&gt;
              four: &#39;physical challenge&#39;,&lt;br /&gt;
              five: &#39;will power&#39;,&lt;br /&gt;
              six: &#39;music&#39;,&lt;br /&gt;
              seven: &#39;friendships&#39;
            }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now these aren&#39;t in order of importance because how can you really make that call? But I can tell you everytime that I have created something by putting my mind to it and letting the &quot;creativity&quot; flow, I have felt great satisfaction and pride. In college as an actor I was constantly creating roles and characters. At home I love to write, I like to work on craft projects, and I like to play music. For me, when I&#39;ve worked on something that is fun and new and I can show it to other people I find myself taking serious pride in those creations. Getting a chance to be creative is always something I get excited about. Whether it&#39;s being asked to build a birdhouse for the yard or write a computer program.&lt;/p&gt;
&lt;p&gt;I would say that each and every one of these values are something that I try to incorporate into my everyday life and live up to. Sure, there are days when this just doesn&#39;t happen, but on the days where I am able to I come away feeling incredible.&lt;/p&gt;
&lt;p&gt;In last week&#39;s post titled &lt;a href=&quot;/blog/c6-stereotype-threat.html&quot;&gt;&lt;em&gt;A Very Real Threat 10.27.14&lt;/em&gt;&lt;/a&gt; I wrote a little bit about how I lost 100 lbs over the course of 12 months after graduating from college. This is one achievement in my life that I am asked about constantly. How did you do it? What was the secret? Well honestly there&#39;s no secret! Just good old diet and exercise. But after looking at some of these values I picked I&#39;ve realized that each one was included in my daily routine during that time. I would get creative and make exercise routines for me to follow. I would run outdoors and in parks to get my daily dose of nature, growth, and physical challenge. I made friendships with those I exercised with and listened to my favorite music every run. I couldn&#39;t have done any of those things without the will power to change. Will power is the key to it all. If you want something bad enough and you are willing to put yourself through the ringer just to get it, I think you can do anything. Anything! You may even find out that the journey to achieving your goal isn&#39;t such a ringer after all. I love running now! Which if you knew me in college would come as quite a shock!&lt;/p&gt;
&lt;p&gt;In last weeks post I also talked a lot about stereotype threat. After thinking for a while about these values I feel that when feeling stereotype threat or really anything that would bring me down; just going for a run on my lunchbreak can turn my day right around. If you can find an activity that helps you get a sense that you&#39;re living up to these values then that can be an incredible tool.&lt;br /&gt;
  I&#39;m more than willing to keep talking about this with anyone who&#39;d like to. As always thanks for reading.&lt;br /&gt;- Ricky&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Oct 2014 08:00:00 -0400</pubDate>
        <link>http://ricky-thomas.github.io/2014/10/08/recognizing-value/</link>
        <guid isPermaLink="true">http://ricky-thomas.github.io/2014/10/08/recognizing-value/</guid>
        
        
      </item>
    
      <item>
        <title>Hooray for Classes!</title>
        <description>&lt;p&gt;&lt;span style=&quot;font-size:3em&quot;&gt;W&lt;/span&gt;hen I was a boy, my sister and I would always argue about who had to do which chores over the weekend. I always wanted to mow the lawn because at age ten the driving lawn mower may as well have been Falcor from &quot;The Neverending Story.&quot; It rocked. I absolutely hated doing the dishes, and being the younger child, it seemed that was always my task. I am telling you...somehow...she rigged it! That damn sister of mine! So for this blog I&#39;m going to solve one of my ten year old problems.&lt;/p&gt;
&lt;h3&gt;Creating a ChoreChart Class&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;class ChoreChart&lt;br /&gt;
          def initialize&lt;br /&gt;
              @chores = [&quot;sweep&quot;, &quot;vacuum&quot;, &quot;rake&quot;, &quot;dishes&quot;, &quot;bathroom&quot;, &quot;mow&quot;]&lt;br /&gt;
              @ricky = []&lt;br /&gt;
              @alicia = []&lt;br /&gt;
          end&lt;br /&gt;end&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So in the above code. We are establishing a new class called &#39;ChoreChart&#39; and initializing a few instance variables. Those are the words with an &#39;@&#39; at the start of them. These variables can be set and used now throughout any other methods we create in the ChoreChart class. So now, as you can see, we&#39;ve made two empty arrays (representing myself and my sister) and one array containing six strings representing all of the weekend chores. The next thing that we want is a way to randomly assign three chores each to my sister and I. Let&#39;s create a ChoreChart method for this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;def assign&lt;br /&gt;
 into_hat = @chores.shuffle&lt;br /&gt;
 @ricky &amp;lt;&amp;lt; into_hat.first(3)&lt;br /&gt;
 @alicia &amp;lt;&amp;lt; into_hat.drop(3)&lt;br /&gt;
end&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In the method above (which will be included in the class), we shuffle up the chore names in the @chore array and make that into a new array that I&#39;ve designated as &#39;into_hat.&#39; Just like putting slips of paper with chores on them into a hat! Then we put the first three chores in the @ricky array and the last three into the @alicia array.&lt;/p&gt;
&lt;p&gt;So now that we have a way to mix up the chores, and split them in a fair and equal manner, we can build one last method to tell us what our chores are for the weekend:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;def tell&lt;br /&gt;
              @ricky = @ricky.join(&quot;, &quot;)&lt;br /&gt;
              puts &quot;Ricky&#39;s chores: #{@ricky}.&quot;&lt;br /&gt;
              @alicia = @alicia.join(&quot;, &quot;)&lt;br /&gt;
              puts &quot;Alicia&#39;s chores: #{@alicia}.&quot;&lt;br /&gt;
          end&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In the &#39;tell&#39; method above, you can see that we turn our new and improved versions of @ricky and @alicia ([random_chore, random_chore, random_chore]) and join all the elements into one long string that we now reset @ricky and @alicia too. Then we print each list to the console with puts.&lt;/p&gt;
&lt;p&gt;Here&#39;s the whole class together:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;class ChoreChart&lt;br /&gt;
          def initialize&lt;br /&gt;
              @chores = [&quot;sweep&quot;, &quot;vacuum&quot;, &quot;rake&quot;, &quot;dishes&quot;, &quot;bathroom&quot;, &quot;mow&quot;]&lt;br /&gt;
              @ricky = []&lt;br /&gt;
              @alicia = []&lt;br /&gt;
          end&lt;br /&gt;&lt;br /&gt;
          def assign&lt;br /&gt;
           into_hat = @chores.shuffle&lt;br /&gt;
           @ricky &amp;lt;&amp;lt; into_hat.first(3)&lt;br /&gt;
           @alicia &amp;lt;&amp;lt; into_hat.drop(3)&lt;br /&gt;
          end&lt;br /&gt;&lt;br /&gt;
          def tell&lt;br /&gt;
              @ricky = @ricky.join(&quot;, &quot;)&lt;br /&gt;
              puts &quot;Ricky&#39;s chores: #{@ricky}.&quot;&lt;br /&gt;
              @alicia = @alicia.join(&quot;, &quot;)&lt;br /&gt;
              puts &quot;Alicia&#39;s chores: #{@alicia}.&quot;&lt;br /&gt;
          end&lt;br /&gt;&lt;br /&gt;
      end&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now consider running following code:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;weekend_chores = ChoreChart.new&lt;br /&gt;
  weekend_chores.assign&lt;br /&gt;
  weekend_chores.tell&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The first line of the above code creates a new instance of our class titled &quot;weekend_chores.&quot;&lt;/p&gt;
&lt;p&gt;Next, we call our assign method on weekend_chores so that our instance variables (@ricky and @alicia) are given their chore assignments.&lt;/p&gt;
&lt;p&gt;Finally, we can call our tell method and see printed out lists telling us which chores we have! Wooooooo chores!!!&lt;/p&gt;

&lt;p&gt;Can you see how the instance variables we created are used throughout multiple methods in the new class? Also, note that we represent a real world object with ChoreChart. Data structures often can be set up to resemble real world objects. For example, five arrays of five elements each stacked on top of one another looks just like a bingo board!&lt;br /&gt;I hope this helps you in your learning and thanks for reading!!&lt;br /&gt;-Ricky&lt;/p&gt;

</description>
        <pubDate>Wed, 08 Oct 2014 08:00:00 -0400</pubDate>
        <link>http://ricky-thomas.github.io/2014/10/08/hooray-for-chores/</link>
        <guid isPermaLink="true">http://ricky-thomas.github.io/2014/10/08/hooray-for-chores/</guid>
        
        
      </item>
    
  </channel>
</rss>
